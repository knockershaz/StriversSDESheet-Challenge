vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<vector<int>>res;
    if(!root)return res;
    stack<pair<BinaryTreeNode<int>* , int>>st;
    vector<int>pre,in,post;
    st.push({root,1});
    while(!st.empty()){
        auto it = st.top();st.pop();
        if(it.second==1){
            pre.push_back(it.first->data);
            it.second++;
            st.push(it);
            if(it.first->left!=NULL)st.push({it.first->left,1});
        }
        else if(it.second==2){
            in.push_back(it.first->data);
            it.second++;
            st.push(it);
            if(it.first->right!=NULL)st.push({it.first->right,1});
        }
        else {
            post.push_back(it.first->data);
        }
    }
    res.push_back(in);
    res.push_back(pre);
    res.push_back(post);
    return res;
}
